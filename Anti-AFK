local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local jumpBind = Enum.KeyCode.Space -- Change this to the key you want to use for jumping

local jumpCooldown = 0.5 -- Adjust the cooldown between jumps in seconds
local lastJumpTime = 0
local isAutoJumpEnabled = false

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Size = UDim2.new(0, 100, 0, 50)
Frame.Position = UDim2.new(0.5, -50, 0.5, -25)
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

local TextLabel = Instance.new("TextLabel")
TextLabel.Parent = Frame
TextLabel.Size = UDim2.new(1, 0, 0.5, 0)
TextLabel.Text = "Auto Jump"
TextLabel.TextScaled = true

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = Frame
ToggleButton.Size = UDim2.new(1, 0, 0.5, 0)
ToggleButton.Position = UDim2.new(0, 0, 0.5, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ToggleButton.Text = "OFF"

ToggleButton.MouseButton1Click:Connect(function()
    isAutoJumpEnabled = not isAutoJumpEnabled
    ToggleButton.Text = isAutoJumpEnabled and "ON" or "OFF"
end)

UIS.InputBegan:Connect(function(input)
    if input.KeyCode == jumpBind and isAutoJumpEnabled and (tick() - lastJumpTime) >= jumpCooldown then
        local bypassByffron = true -- Set this to false if Byffron is patched
        if bypassByffron or not player.Character:FindFirstChild("HumanoidRootPart") then
            UIS.InputEnded:Connect(function(input2)
                if input2.KeyCode == jumpBind then
                    lastJumpTime = tick()
                    player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        end
    end
end)
